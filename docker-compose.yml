services:
  postgres:
    image: postgres:15-alpine
    container_name: taskflow-postgres
    environment:
      POSTGRES_DB: taskflow
      POSTGRES_USER: taskflow
      POSTGRES_PASSWORD: taskflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - taskflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile.dev
    container_name: taskflow-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=taskflow
      - DB_PASSWORD=taskflow
      - DB_DATABASE=taskflow

      - JWT_SECRET=development-jwt-secret-key
      - JWT_EXPIRES_IN=24h
    volumes:
      - ./apps/backend:/app
      - backend_node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - taskflow-network
    restart: unless-stopped

  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile.dev
    container_name: taskflow-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - WATCHPACK_POLLING=true
    volumes:
      - ./apps/frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    networks:
      - taskflow-network
    restart: unless-stopped

volumes:
  postgres_data:
  backend_node_modules:
  frontend_node_modules:

networks:
  taskflow-network:
    driver: bridge
